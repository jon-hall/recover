#!/usr/bin/env node
'use strict';

const argv = require('commander')
    .version(require('../package.json').version)
    .usage('recover <to|push|pop|reset|ls>')
    .option('-t, --target [path]', 'Specify the folder to use recover on')
    .option('-g, --gitdir [path]', 'Specify the path for the git directory recover will use')
    .parse(process.argv),
    recover = require('../src/recover')(argv),
    args = argv.args;

let op = args[0],
    cmd;

switch(op) {
    case 'to':
        cmd = recover.to(args[1])
            .then(() => console.log(`now at ${args[1]}`));
        break;
    case 'push':
        cmd = recover.push(args[1])
            .then(tag => console.log(tag ? `pushed ${tag}` : 'no changes'));
        break;
    case 'pop':
        cmd = recover.pop()
            .then(() => console.log(`popped`));
        break;
    case 'reset':
        cmd = recover.reset()
            .then(() => console.log(`reset`));
        break;
    case 'ls':
        cmd = recover.list()
            .then(tags => console.log(`${tags.join('\n')}\n`));
        break;
    default:
        cmd = recover.to(args[0])
            .then(() => console.log(`now at ${args[0]}`));
        break;
}

cmd.then(
    null,
    err => console.error(err)
);
